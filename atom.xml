<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>废柴训练营</title>
  
  <subtitle>学习、交流、分享、成长</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bksaas.com/"/>
  <updated>2019-05-06T06:51:04.448Z</updated>
  <id>http://bksaas.com/</id>
  
  <author>
    <name>pitou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于hexo博客的托管和配置</title>
    <link href="http://bksaas.com/2019/05/06/hexo/"/>
    <id>http://bksaas.com/2019/05/06/hexo/</id>
    <published>2019-05-06T06:18:42.000Z</published>
    <updated>2019-05-06T06:51:04.448Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、-代码托管"><a href="#一、-代码托管" class="headerlink" title="一、 代码托管"></a>一、 代码托管</h2><ol><li>托管到github</li><li>托管到coding</li></ol><a id="more"></a><h2 id="二、-分支结构"><a href="#二、-分支结构" class="headerlink" title="二、 分支结构"></a>二、 分支结构</h2><ol><li>master分支：存放博客静态资源</li><li>hexo分支：存放博客的源码</li></ol><h2 id="三、-域名配置"><a href="#三、-域名配置" class="headerlink" title="三、 域名配置"></a>三、 域名配置</h2><p>手上恰好有腾讯云的域名，分配两个域名给博客</p><ol><li>coding绑定域名：blog.bksaas.com</li></ol><p>&ensp;&ensp;&ensp;&ensp;添加CNAME类型域名，指向：<code>username.coding.me</code><br>&ensp;&ensp;&ensp;&ensp;配置位置：<code>代码 &gt; Pages 服务 &gt; 设置 &gt; 绑定新域名</code></p><ol start="2"><li>github绑定域名：feichai.bksaas.com</li></ol><p>&ensp;&ensp;&ensp;&ensp;添加CNAME类型域名，指向：<code>username.github.io</code><br>&ensp;&ensp;&ensp;&ensp;配置位置：<code>Settings &gt; GitHub Pages &gt; Custom domain</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、-代码托管&quot;&gt;&lt;a href=&quot;#一、-代码托管&quot; class=&quot;headerlink&quot; title=&quot;一、 代码托管&quot;&gt;&lt;/a&gt;一、 代码托管&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;托管到github&lt;/li&gt;
&lt;li&gt;托管到coding&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://bksaas.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>sanic .</title>
    <link href="http://bksaas.com/2018/10/09/sanic/"/>
    <id>http://bksaas.com/2018/10/09/sanic/</id>
    <published>2018-10-09T04:18:31.000Z</published>
    <updated>2018-11-08T14:34:10.833Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sanic"><a href="#sanic" class="headerlink" title="sanic"></a>sanic</h2><p>中文：<a href="https://www.kancloud.cn/hiseh/sanic/543145" target="_blank" rel="noopener">https://www.kancloud.cn/hiseh/sanic/543145</a><br>code：<a href="https://github.com/hiseh/micspy/tree/master/test/sanic" target="_blank" rel="noopener">https://github.com/hiseh/micspy/tree/master/test/sanic</a><br><a href="https://github.com/gmaclinuxer/books/tree/master/Sanic%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97" target="_blank" rel="noopener">https://github.com/gmaclinuxer/books/tree/master/Sanic%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97</a></p><p><a href="https://sanic.readthedocs.io/en/latest/sanic/routing.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/routing.html</a></p><p>路由：</p><ol><li>支持变量，变量支持正则和类型匹配</li><li>支持请求方法限制</li><li>支持url反向解析（url_for）</li><li>路由的原始写法（add_route）</li><li>支持websocket路由</li><li>支持trailing slash设置及url命名设置</li><li>支持静态资源文件路由</li></ol><p><a href="https://sanic.readthedocs.io/en/latest/sanic/request_data.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/request_data.html</a></p><p>Request：</p><ol><li>request.json</li><li>request.args/request.raw_args/request.query_string</li><li>request.url/ip/port/scheme/path</li><li>request.files</li><li>request.form</li><li>request.body</li><li>request.headers</li><li>request.uri_template/token</li><li>RequestParameters/get/getlist</li></ol><p><a href="https://sanic.readthedocs.io/en/latest/sanic/response.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/response.html</a></p><p>Response：</p><p>Sanic.response.</p><ol><li>text/raw</li><li>html</li><li>json</li><li>file/stream/file_stream</li><li>redirect</li><li>custom headers and status</li></ol><p><a href="https://sanic.readthedocs.io/en/latest/sanic/static_files.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/static_files.html</a></p><p>静态资源：app.static/bp.static</p><p><a href="https://sanic.readthedocs.io/en/latest/sanic/exceptions.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/exceptions.html</a></p><p>异常：</p><ol><li>抛异常方式一：raise sanic.exceptions.ServerError</li><li>抛异常方式二：abort(401)</li><li>通过装饰器自定义异常捕捉：@app.exception(sanic.exceptions.NotFound)</li></ol><p><a href="https://sanic.readthedocs.io/en/latest/sanic/middleware.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/middleware.html</a></p><p>中间件：app.middleware</p><ol><li>request类型和reponse类型中间件</li><li>修改request和response</li><li>在中间件中提前返回Response</li></ol><p>监听者：app.listener</p><ol><li>before_server_start</li><li>after_server_start</li><li>before_server_stop</li><li>after_server_stop</li></ol><p>启动<code>后台任务</code>：app.add_task</p><p><a href="https://sanic.readthedocs.io/en/latest/sanic/blueprints.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/blueprints.html</a></p><p>蓝图：子路由</p><ol><li>大型应用中的路由拆分<ol><li>bp.route</li><li>bp.middleware</li><li>bp.exception</li><li>bp.static</li><li>bp.listener </li></ol></li><li>版本管理<ol><li>url_prefix （for api versioning）</li></ol></li></ol><p><a href="https://sanic.readthedocs.io/en/latest/sanic/config.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/config.html</a></p><p>Settings：app.config</p><ol><li>类属性修改方式</li><li>字典方式-update</li><li>加载方式：<ol><li>环境变量：Sanic(load_env=“TEST_”)</li><li>来自对象：from_object(conf.settings_development)</li><li>来自文件：from_envvar/from_pyfile</li></ol></li></ol><p><a href="https://sanic.readthedocs.io/en/latest/sanic/cookies.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/cookies.html</a></p><p>Cookies：</p><ol><li>request.cookies.get</li><li>response.cookies[‘xxx’] = ‘xxx’</li><li>delete response.cookies[‘xxx’]</li></ol><p><a href="https://sanic.readthedocs.io/en/latest/sanic/logging.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/logging.html</a><br><a href="https://www.kancloud.cn/hiseh/sanic/543145" target="_blank" rel="noopener">https://www.kancloud.cn/hiseh/sanic/543145</a></p><p>日志：python3 logging api</p><ol><li>access_log</li><li>log_config</li><li>sanic.log.LOGGING_CONFIG_DEFAULTS</li><li>loggers and format<br>—————————————————————</li></ol><p>装饰器：<a href="https://sanic.readthedocs.io/en/latest/sanic/decorators.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/decorators.html</a></p><p>流式请求和返回的支持：<a href="https://sanic.readthedocs.io/en/latest/sanic/streaming.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/streaming.html</a></p><p>类视图：<a href="https://sanic.readthedocs.io/en/latest/sanic/class_based_views.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/class_based_views.html</a></p><ol><li>HTTPMethodView</li><li>add_route/as_view</li><li>decorators</li><li>CompositionView</li></ol><p>自定义协议：<a href="https://sanic.readthedocs.io/en/latest/sanic/custom_protocol.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/custom_protocol.html</a></p><p>SSL支持：<a href="https://sanic.readthedocs.io/en/latest/sanic/ssl.html" target="_blank" rel="noopener">https://sanic.readthedocs.io/en/latest/sanic/ssl.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sanic&quot;&gt;&lt;a href=&quot;#sanic&quot; class=&quot;headerlink&quot; title=&quot;sanic&quot;&gt;&lt;/a&gt;sanic&lt;/h2&gt;&lt;p&gt;中文：&lt;a href=&quot;https://www.kancloud.cn/hiseh/sanic/543145&quot; ta
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>够浪基础篇</title>
    <link href="http://bksaas.com/2018/05/26/gobyexample/"/>
    <id>http://bksaas.com/2018/05/26/gobyexample/</id>
    <published>2018-05-26T01:21:55.000Z</published>
    <updated>2018-11-08T14:34:10.845Z</updated>
    
    <content type="html"><![CDATA[<ol><li><a href="https://gobyexample.com/command-line-flags" target="_blank" rel="noopener">command-line-flags</a></li><li><p><a href="http://www.ruanyifeng.com/blog/2015/02/make.html" target="_blank" rel="noopener">makefile</a></p><ul><li><a href="https://gist.github.com/turtlemonvh/38bd3d73e61769767c35931d8c70ccb4" target="_blank" rel="noopener">https://gist.github.com/turtlemonvh/38bd3d73e61769767c35931d8c70ccb4</a></li><li><a href="https://sohlich.github.io/post/go_makefile/" target="_blank" rel="noopener">https://sohlich.github.io/post/go_makefile/</a></li><li><a href="https://sahilm.com/makefiles-for-golang/" target="_blank" rel="noopener">https://sahilm.com/makefiles-for-golang/</a></li><li><a href="https://vincent.bernat.im/en/blog/2017-makefile-build-golang" target="_blank" rel="noopener">https://vincent.bernat.im/en/blog/2017-makefile-build-golang</a></li><li><a href="https://gist.github.com/subfuzion/0bd969d08fe0d8b5cc4b23c795854a13" target="_blank" rel="noopener">https://gist.github.com/subfuzion/0bd969d08fe0d8b5cc4b23c795854a13</a></li></ul></li><li><p><a href="https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/11.3.md" target="_blank" rel="noopener">go单元测试</a></p><ul><li><a href="https://jimmysong.io/go-practice/docs/go_unit_test.html" target="_blank" rel="noopener">https://jimmysong.io/go-practice/docs/go_unit_test.html</a></li><li><a href="https://www.jetbrains.com/help/go/run-debug-configuration-for-go-test.html" target="_blank" rel="noopener">https://www.jetbrains.com/help/go/run-debug-configuration-for-go-test.html</a></li><li><a href="https://github.com/cweill/gotests" target="_blank" rel="noopener">https://github.com/cweill/gotests</a></li></ul></li><li><p><a href="http://www.cnblogs.com/hustcat/p/4004889.html" target="_blank" rel="noopener">new vs make</a></p></li><li><p><a href="https://github.com/alecthomas/gometalinter#quickstart" target="_blank" rel="noopener">静态代码检查</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://gobyexample.com/command-line-flags&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;command-line-flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;htt
      
    
    </summary>
    
    
      <category term="golang" scheme="http://bksaas.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>实现一个特殊的栈，在实现栈的基本功能的基础上，再实现返回栈中最小元素</title>
    <link href="http://bksaas.com/2018/02/26/q-1/"/>
    <id>http://bksaas.com/2018/02/26/q-1/</id>
    <published>2018-02-26T01:56:32.000Z</published>
    <updated>2018-11-08T14:34:10.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、题目"><a href="#一、题目" class="headerlink" title="一、题目"></a>一、题目</h1><blockquote><p>   题目：实现一个特殊的栈，在实现栈的基本功能的基础上，再实现返回栈中最小元素<br>   要求：<br>       1.pop、push、getMin操作的时间复杂度都是O(1)<br>       2.设计的栈类型可以使用现成的栈结构<br><a id="more"></a></p></blockquote><h1 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h1><p>&emsp;&emsp;双栈同入同出，浪费空间，但是思路简明直接</p><h1 id="三、代码"><a href="#三、代码" class="headerlink" title="三、代码"></a>三、代码</h1><h2 id="1-python"><a href="#1-python" class="headerlink" title="1. python"></a>1. python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStack</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">        解法一：双栈同入同出，浪费空间，但是思路简明直接</span></span><br><span class="line"><span class="string">        备注：这里使用的python列表具有栈的功能，支持pop操作</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self._stack = []</span><br><span class="line">        self._stk_min = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_peek</span><span class="params">(self, stk_list)</span>:</span></span><br><span class="line">        <span class="string">"""获取栈顶元素，也就是列表最后一个元素"""</span></span><br><span class="line">        <span class="keyword">return</span> stk_list[len(stk_list) - <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">peek</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""返回栈顶元素"""</span></span><br><span class="line">        <span class="keyword">return</span> self._peek(self._stack)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span><span class="params">(self, item)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">            双栈同入</span></span><br><span class="line"><span class="string">            入栈基本元素的同时，负责维护最小栈</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># 栈为空，直接入栈当前元素</span></span><br><span class="line">        _stk_min_top = item <span class="keyword">if</span> self._stk_min == [] <span class="keyword">else</span> self._peek(self._stk_min)</span><br><span class="line">        item_min = min(_stk_min_top, item)</span><br><span class="line"></span><br><span class="line">        self._stk_min.append(item_min)</span><br><span class="line">        self._stack.append(item)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">            双栈同出</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> self.is_empty():</span><br><span class="line">            <span class="keyword">raise</span> IndexError</span><br><span class="line"></span><br><span class="line">        self._stk_min.pop()</span><br><span class="line">        <span class="keyword">return</span> self._stack.pop()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">min</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">            获取栈内最小值</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> self.is_empty():</span><br><span class="line">            <span class="keyword">raise</span> IndexError</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self._peek(self._stk_min)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">size</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">            栈大小</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> len(self._stack)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_empty</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">            栈判空</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># 这是个坑~</span></span><br><span class="line">        <span class="comment"># return self._stack is []</span></span><br><span class="line">        <span class="keyword">return</span> self._stack == []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_stack</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">            打印栈</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'&#123;&#125; --&gt; &#123;&#125; --&gt; &#123;&#125;'</span>.format(self._stack, self._stk_min, self.min())</span><br><span class="line">        <span class="keyword">except</span> IndexError:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    $ python q1_stack_getMin.py</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    [84] --&gt; [84] --&gt; 84</span></span><br><span class="line"><span class="string">    [84, 93] --&gt; [84, 84] --&gt; 84</span></span><br><span class="line"><span class="string">    [84, 93, 87] --&gt; [84, 84, 84] --&gt; 84</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79] --&gt; [84, 84, 84, 79] --&gt; 79</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79, 65] --&gt; [84, 84, 84, 79, 65] --&gt; 65</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79, 65, 15] --&gt; [84, 84, 84, 79, 65, 15] --&gt; 15</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79, 65, 15, 67] --&gt; [84, 84, 84, 79, 65, 15, 15] --&gt; 15</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79, 65, 15, 67, 1] --&gt; [84, 84, 84, 79, 65, 15, 15, 1] --&gt; 1</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79, 65, 15, 67, 1, 54] --&gt; [84, 84, 84, 79, 65, 15, 15, 1, 1] --&gt; 1</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79, 65, 15, 67, 1, 54, 64] --&gt; [84, 84, 84, 79, 65, 15, 15, 1, 1, 1] --&gt; 1</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79, 65, 15, 67, 1, 54] --&gt; [84, 84, 84, 79, 65, 15, 15, 1, 1] --&gt; 1</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79, 65, 15, 67, 1] --&gt; [84, 84, 84, 79, 65, 15, 15, 1] --&gt; 1</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79, 65, 15, 67] --&gt; [84, 84, 84, 79, 65, 15, 15] --&gt; 15</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79, 65, 15] --&gt; [84, 84, 84, 79, 65, 15] --&gt; 15</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79, 65] --&gt; [84, 84, 84, 79, 65] --&gt; 65</span></span><br><span class="line"><span class="string">    [84, 93, 87, 79] --&gt; [84, 84, 84, 79] --&gt; 79</span></span><br><span class="line"><span class="string">    [84, 93, 87] --&gt; [84, 84, 84] --&gt; 84</span></span><br><span class="line"><span class="string">    [84, 93] --&gt; [84, 84] --&gt; 84</span></span><br><span class="line"><span class="string">    [84] --&gt; [84] --&gt; 84   </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">    s = MyStack()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        s.push(random.randint(<span class="number">0</span>, <span class="number">100</span>))</span><br><span class="line">        s.print_stack()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> s.is_empty():</span><br><span class="line">        s.pop()</span><br><span class="line">        s.print_stack()</span><br></pre></td></tr></table></figure><h2 id="2-golang"><a href="#2-golang" class="headerlink" title="2. golang"></a>2. golang</h2><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"gohome/go_deepin/common"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Stack <span class="keyword">struct</span> &#123;</span><br><span class="line">s, _s common.Stack</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(stack Stack)</span> <span class="title">GetMin</span><span class="params">()</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> stack._s.Top()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 出栈</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(stack *Stack)</span> <span class="title">Pop</span><span class="params">()</span> <span class="params">(<span class="keyword">interface</span>&#123;&#125;, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> stack.s.Pop()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入栈</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(stack *Stack)</span> <span class="title">Push</span><span class="params">(value <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">stkTopValue, _ := stack._s.Top()</span><br><span class="line"><span class="keyword">if</span> stkTopValue == <span class="literal">nil</span> || stkTopValue.(<span class="keyword">int</span>) &gt; value.(<span class="keyword">int</span>) &#123;</span><br><span class="line">stack._s.Push(value)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">stack._s.Push(stkTopValue)</span><br><span class="line">&#125;</span><br><span class="line">stack.s.Push(value)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> myStack Stack</span><br><span class="line"><span class="keyword">var</span> arr = []<span class="keyword">int</span>&#123;</span><br><span class="line"><span class="number">10</span>, <span class="number">23</span>, <span class="number">9</span>, <span class="number">21</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">43</span>, <span class="number">5</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> (arr) &#123;</span><br><span class="line">myStack.Push(v)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//for _, v1 := range (myStack._s) &#123;</span></span><br><span class="line"><span class="comment">//fmt.Println(v1)</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">fmt.Println(myStack.GetMin())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、题目&quot;&gt;&lt;a href=&quot;#一、题目&quot; class=&quot;headerlink&quot; title=&quot;一、题目&quot;&gt;&lt;/a&gt;一、题目&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;   题目：实现一个特殊的栈，在实现栈的基本功能的基础上，再实现返回栈中最小元素&lt;br&gt;   要求：&lt;br&gt;       1.pop、push、getMin操作的时间复杂度都是O(1)&lt;br&gt;       2.设计的栈类型可以使用现成的栈结构&lt;br&gt;
    
    </summary>
    
      <category term="每日一练" scheme="http://bksaas.com/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E7%BB%83/"/>
    
    
      <category term="刷题" scheme="http://bksaas.com/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>git提交规范</title>
    <link href="http://bksaas.com/2018/01/13/git-cimmit-standard/"/>
    <id>http://bksaas.com/2018/01/13/git-cimmit-standard/</id>
    <published>2018-01-12T20:30:18.000Z</published>
    <updated>2018-11-08T14:34:10.825Z</updated>
    
    <content type="html"><![CDATA[<ol><li>feat        -&gt; 特性</li><li>fix         -&gt; 修bug</li><li>refactor    -&gt; 重构</li><li>test        -&gt; 测试</li><li>perf        -&gt; 性能提升</li><li>style       -&gt; 微调</li><li>docs        -&gt; 文档</li><li>conflict    -&gt; 解决冲突</li><li>chore       -&gt; 更改核心模块</li></ol><p>参考列表：</p><ul><li><a href="https://www.zhihu.com/question/21209619" target="_blank" rel="noopener">https://www.zhihu.com/question/21209619</a></li><li><a href="http://karma-runner.github.io/2.0/dev/git-commit-msg.html" target="_blank" rel="noopener">http://karma-runner.github.io/2.0/dev/git-commit-msg.html</a></li><li><a href="https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#" target="_blank" rel="noopener">https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#</a></li><li><a href="http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html</a></li><li><a href="http://commitizen.github.io/cz-cli/" target="_blank" rel="noopener">http://commitizen.github.io/cz-cli/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;feat        -&amp;gt; 特性&lt;/li&gt;
&lt;li&gt;fix         -&amp;gt; 修bug&lt;/li&gt;
&lt;li&gt;refactor    -&amp;gt; 重构&lt;/li&gt;
&lt;li&gt;test        -&amp;gt; 测试&lt;/li&gt;
&lt;li&gt;perf     
      
    
    </summary>
    
      <category term="git" scheme="http://bksaas.com/categories/git/"/>
    
    
      <category term="git" scheme="http://bksaas.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Mysql主从复制</title>
    <link href="http://bksaas.com/2018/01/03/mysql-master-slave/"/>
    <id>http://bksaas.com/2018/01/03/mysql-master-slave/</id>
    <published>2018-01-03T08:22:38.000Z</published>
    <updated>2018-11-08T14:34:10.837Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://image-upaiyun.test.upcdn.net/image-upaiyun/chrome_2018-01-05_14-22-18.png" alt="原理图"></p><center>主从复制原理图，暂时借用自<a href="http://blog.51cto.com/lizhenliang/1290431" target="_blank" rel="noopener">图片出处</a></center><h1 id="一-实验环境"><a href="#一-实验环境" class="headerlink" title="一. 实验环境"></a>一. 实验环境</h1><p>&emsp;&emsp;采用Vagrant搭建mysql集群，这里配置三台mysql服务器，操作系统为Centos7<br><a id="more"></a><br>1.Vagrantfile配置如下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1..3，根据需要修改</span></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> <span class="params">|config|</span></span><br><span class="line">(<span class="number">1</span>..<span class="number">3</span>).each <span class="keyword">do</span> <span class="params">|i|</span></span><br><span class="line">config.vm.define <span class="string">"mysql<span class="subst">#&#123;i&#125;</span>"</span> <span class="keyword">do</span> <span class="params">|node|</span></span><br><span class="line"><span class="comment"># 设置虚拟机的Box，根据需要修改</span></span><br><span class="line">node.vm.box = <span class="string">"centos7"</span></span><br><span class="line"><span class="comment"># 设置虚拟机的主机名</span></span><br><span class="line">node.vm.hostname=<span class="string">"mysql<span class="subst">#&#123;i&#125;</span>"</span></span><br><span class="line"><span class="comment"># 设置虚拟机的IP</span></span><br><span class="line">node.vm.network <span class="string">"private_network"</span>, <span class="symbol">ip:</span> <span class="string">"192.168.1.1<span class="subst">#&#123;i&#125;</span>"</span></span><br><span class="line"><span class="comment"># 设置主机与虚拟机的共享目录，根据需要开启</span></span><br><span class="line"><span class="comment"># config.vm.synced_folder "C:\\ssd", "/ssd"</span></span><br><span class="line"><span class="comment"># VirtaulBox相关配置</span></span><br><span class="line">node.vm.provider <span class="string">"virtualbox"</span> <span class="keyword">do</span> <span class="params">|v|</span></span><br><span class="line"><span class="comment"># 设置虚拟机的名称</span></span><br><span class="line">v.name = <span class="string">"mysql<span class="subst">#&#123;i&#125;</span>"</span></span><br><span class="line"><span class="comment"># 设置虚拟机的内存大小，根据需要修改</span></span><br><span class="line">v.memory = <span class="number">768</span></span><br><span class="line"><span class="comment"># 设置虚拟机的CPU个数</span></span><br><span class="line">v.cpus = <span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 使用shell脚本进行软件安装和配置</span></span><br><span class="line">node.vm.provision <span class="string">"shell"</span>, <span class="symbol">inline:</span> <span class="string">&lt;&lt;-SHELL</span></span><br><span class="line"><span class="string">            echo 'do something'</span></span><br><span class="line"><span class="string">SHELL</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>2.主机角色如下:</p><ul><li>master 192.168.1.11 mysql1</li><li>slave  192.168.1.12 mysql2</li><li>slave  192.168.1.13 mysql3</li></ul><p>3.启动后我们登录<code>mysql1</code>，也就是<code>192.168.1.11</code>，安装mariadb(兼容mysql)，版本为5.5.56</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install mariadb-server mariadb -y</span><br><span class="line">yum list|grep mariadb</span><br><span class="line"></span><br><span class="line">mariadb.x86_64                              1:5.5.56-2.el7             @base    </span><br><span class="line">mariadb-libs.x86_64                         1:5.5.56-2.el7             @base    </span><br><span class="line">mariadb-server.x86_64                       1:5.5.56-2.el7             @base    </span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>4.关闭防火墙，清空iptables，避免策略问题给实验带来不必要的干扰</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql1 vagrant]# iptables -F</span><br><span class="line">[root@mysql1 vagrant]# iptables -X</span><br><span class="line">[root@mysql1 vagrant]# iptables -L -n</span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">[root@mysql1 vagrant]#</span><br></pre></td></tr></table></figure><h1 id="二-配置master"><a href="#二-配置master" class="headerlink" title="二. 配置master"></a>二. 配置master</h1><p>1.设置root账户的密码（可选）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 方法一</span><br><span class="line">mysql_secure_installation</span><br><span class="line"></span><br><span class="line"># 方法二</span><br><span class="line">update mysql.user set password=PASSWORD(&apos;root&apos;) where user=&apos;root&apos;;</span><br></pre></td></tr></table></figure><p>2.登录mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 帐号密码登录（设置过root密码）</span></span><br><span class="line">mysql -uroot -proot</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 直接登录（没有设置root密码）</span></span><br><span class="line">mysql</span><br></pre></td></tr></table></figure><p>3.授权slave访问master</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant replication slave, replication client on *.* to slave@'%' identified by 'slave';</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>4.增加master相关配置</p><p>这里，我们参考mariadb安装包自带的配置文件: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql1 vagrant]# ls /usr/share/mysql/|grep cnf</span><br><span class="line">my-huge.cnf</span><br><span class="line">my-innodb-heavy-4G.cnf</span><br><span class="line">my-large.cnf</span><br><span class="line">my-medium.cnf</span><br><span class="line">my-small.cnf</span><br><span class="line">README.mysql-cnf</span><br><span class="line">[root@mysql1 vagrant]#</span><br></pre></td></tr></table></figure><p>根据mariadb的配置建议，我们把master的配置文件单独放到<code>/etc/my.cnf.d/</code>目录下，简单配置如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/my.cnf.d/mysql-master.cnf &lt;&lt; EOF</span><br><span class="line">[mysqld]</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog_format=mixed</span><br><span class="line"><span class="meta">#</span><span class="bash"> required unique id between 2 and 2^32 - 1</span></span><br><span class="line">server-id= 1</span><br><span class="line"><span class="meta">#</span><span class="bash"> sync table list</span></span><br><span class="line">binlog-do-db = test,demodb</span><br><span class="line"><span class="meta">#</span><span class="bash"> ignore table list</span></span><br><span class="line">binlog-ignore-db=mysql</span><br><span class="line">binlog-ignore-db=information_schema</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>接着，我们重启mariadb并查看master配置效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@mysql1 vagrant]# systemctl restart mariadb</span><br><span class="line">[root@mysql1 vagrant]# systemctl status mariadb</span><br><span class="line">mariadb.service - MariaDB database server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/mariadb.service; disabled)</span><br><span class="line">...</span><br><span class="line">1月 03 17:56:32 mysql1 mysqld_safe[4511]: 180103 17:56:32 mysqld_safe Starting mysqld daemon with databases from /var/lib/mysql</span><br><span class="line">1月 03 17:56:34 mysql1 systemd[1]: Started MariaDB database server.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+--------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB         |</span><br><span class="line">+------------------+----------+--------------+--------------------------+</span><br><span class="line">| mysql-bin.000006 |      245 | test,demodb  | mysql,information_schema |</span><br><span class="line">+------------------+----------+--------------+--------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>请记住<code>File</code>和<code>Position</code>，这两个字段会在后面slave的配置中用到.</p><h1 id="三-配置slave"><a href="#三-配置slave" class="headerlink" title="三. 配置slave"></a>三. 配置slave</h1><p>从5.5版本的官方文档得知，在slave中不需要配置master相关信息:</p><p><a href="https://dev.mysql.com/doc/refman/5.5/en/replication-options-slave.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.5/en/replication-options-slave.html</a></p><blockquote><p>The following options are removed in MySQL 5.5. If you attempt to start mysqld with any of these options in MySQL 5.5,<br>the server aborts with an unknown variable error. To set the replication parameters formerly associated with these options,<br>you must use the CHANGE MASTER TO … statement (see Section 13.4.2.1, “CHANGE MASTER TO Syntax”).</p></blockquote><blockquote><p>The options affected are shown in this list:<br>–master-host<br>–master-user<br>–master-password<br>–master-port<br>…</p></blockquote><p>如果配置了反而会出错：</p><p><strong><em>/usr/libexec/mysqld: unknown variable ‘master-host=192.168.1.11’</em></strong></p><p>1.这里我们以<code>mysql2</code>的配置为例，首先登录<code>mysql2</code>，然后增加slave配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">vagrant ssh mysql2</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/my.cnf.d/mysql-slave.cnf &lt;&lt; EOF</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 不能和master或者其他slave冲突，这里也可用ip来充当server_id</span></span><br><span class="line">server-id= 2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>2.创建需要从master复制的db:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database demodb;</span><br></pre></td></tr></table></figure><p>3.登录mysql并为slave指定master信息:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysql -uroot -proot</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 先停掉工作线程</span></span><br><span class="line">slave stop</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 方式一：不指定binlog和logpos</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CHANGE MASTER TO MASTER_HOST=<span class="string">'192.168.1.11'</span>,MASTER_PORT=3306,MASTER_USER=<span class="string">'slave'</span>,MASTER_PASSWORD=<span class="string">'slave'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 方式二：建议指定binlog和logpos，也就是上文提到的File和Position</span></span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">  MASTER_HOST='192.168.1.11',</span><br><span class="line">  MASTER_USER='slave',</span><br><span class="line">  MASTER_PASSWORD='slave',</span><br><span class="line">  MASTER_PORT=3306,</span><br><span class="line">  MASTER_LOG_FILE='mysql-bin.000006',</span><br><span class="line">  MASTER_LOG_POS=245,</span><br><span class="line">  MASTER_CONNECT_RETRY=10;</span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动工作线程</span></span><br><span class="line">slave start</span><br></pre></td></tr></table></figure><p>4.查看slave的状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show slave status\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 192.168.1.11</span><br><span class="line">                  Master_User: slave</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 10</span><br><span class="line">              Master_Log_File: mysql-bin.000006</span><br><span class="line">          Read_Master_Log_Pos: 245</span><br><span class="line">               Relay_Log_File: mariadb-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 529</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000006</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">...</span><br><span class="line">             Master_Server_Id: 1</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR: No query specified</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt;</span><br></pre></td></tr></table></figure><p>重点关注：<code>Slave_IO_Running: Yes</code>和<code>Slave_SQL_Running: Yes</code>说明slave复制线程已经开始工作，此时我们可以看到，指定的db已经同步过来了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [demodb]&gt; show tables;</span><br><span class="line">+---------------------------------+</span><br><span class="line">| Tables_in_demodb                |</span><br><span class="line">+---------------------------------+</span><br><span class="line">...</span><br><span class="line">| django_site                     |</span><br><span class="line">...</span><br><span class="line">| home_application_author         |</span><br><span class="line">| home_application_publisher      |</span><br><span class="line">+---------------------------------+</span><br><span class="line">24 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"># 在master中向django_site插入数据，然后到slave中查看很快同步过来</span><br><span class="line"></span><br><span class="line">MariaDB [demodb]&gt; select * from django_site;</span><br><span class="line">+----+-------------+-------------+</span><br><span class="line">| id | domain      | name        |</span><br><span class="line">+----+-------------+-------------+</span><br><span class="line">|  1 | example.com | example.com |</span><br><span class="line">|  2 | test        | test        |</span><br><span class="line">|  3 | test1       | test1       |</span><br><span class="line">|  4 | test        | test        |</span><br><span class="line">|  5 | test        | test        |</span><br><span class="line">+----+-------------+-------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MariaDB [demodb]&gt; show processlist;</span><br><span class="line">+----+-------------+-----------+--------+---------+------+-----------------------------------------------------------------------------+------------------+----------+</span><br><span class="line">| Id | User        | Host      | db     | Command | Time | State                                                                       | Info             | Progress |</span><br><span class="line">+----+-------------+-----------+--------+---------+------+-----------------------------------------------------------------------------+------------------+----------+</span><br><span class="line">| 11 | root        | localhost | demodb | Query   |    0 | NULL                                                                        | show processlist |    0.000 |</span><br><span class="line">| 12 | system user |           | NULL   | Connect |  391 | Waiting for master to send event                                            | NULL             |    0.000 |</span><br><span class="line">| 13 | system user |           | NULL   | Connect |  391 | Slave has read all relay log; waiting for the slave I/O thread to update it | NULL             |    0.000 |</span><br><span class="line">+----+-------------+-----------+--------+---------+------+-----------------------------------------------------------------------------+------------------+----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;两台slave采用相同的方式配置，注意server-id不能重复即可，通过前面的设置，即可实现一个master和多个slave的主从复制功能.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://image-upaiyun.test.upcdn.net/image-upaiyun/chrome_2018-01-05_14-22-18.png&quot; alt=&quot;原理图&quot;&gt;&lt;/p&gt;
&lt;center&gt;主从复制原理图，暂时借用自&lt;a href=&quot;http://blog.51cto.com/lizhenliang/1290431&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;图片出处&lt;/a&gt;&lt;/center&gt;

&lt;h1 id=&quot;一-实验环境&quot;&gt;&lt;a href=&quot;#一-实验环境&quot; class=&quot;headerlink&quot; title=&quot;一. 实验环境&quot;&gt;&lt;/a&gt;一. 实验环境&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;采用Vagrant搭建mysql集群，这里配置三台mysql服务器，操作系统为Centos7&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://bksaas.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://bksaas.com/tags/mysql/"/>
    
      <category term="主从复制" scheme="http://bksaas.com/tags/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>vim精简配置</title>
    <link href="http://bksaas.com/2018/01/03/vim-basic-1/"/>
    <id>http://bksaas.com/2018/01/03/vim-basic-1/</id>
    <published>2018-01-03T02:55:40.000Z</published>
    <updated>2018-11-08T14:34:10.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vim-vimrc"><a href="#vim-vimrc" class="headerlink" title="vim ~/.vimrc"></a>vim ~/.vimrc</h1><p>vim的配置内容特别多，这里值保留最精简的配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">syntax on</span><br><span class="line">set number</span><br><span class="line">set tabstop=4</span><br><span class="line">set expandtab</span><br><span class="line">set bg=light</span><br><span class="line">set paste</span><br><span class="line">color murphy</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vim-vimrc&quot;&gt;&lt;a href=&quot;#vim-vimrc&quot; class=&quot;headerlink&quot; title=&quot;vim ~/.vimrc&quot;&gt;&lt;/a&gt;vim ~/.vimrc&lt;/h1&gt;&lt;p&gt;vim的配置内容特别多，这里值保留最精简的配置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;syntax on&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set tabstop=4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set expandtab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set bg=light&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set paste&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;color murphy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="vim" scheme="http://bksaas.com/categories/vim/"/>
    
    
      <category term="vim配置" scheme="http://bksaas.com/tags/vim%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Vagrant搭建集群环境</title>
    <link href="http://bksaas.com/2018/01/03/vagrant-cluster/"/>
    <id>http://bksaas.com/2018/01/03/vagrant-cluster/</id>
    <published>2018-01-03T01:07:08.000Z</published>
    <updated>2018-11-08T14:34:10.825Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-安装vagrant和virtualbox"><a href="#1-安装vagrant和virtualbox" class="headerlink" title="1. 安装vagrant和virtualbox"></a>1. 安装vagrant和virtualbox</h1><pre><code>自行解决</code></pre><h1 id="2-安装box文件"><a href="#2-安装box文件" class="headerlink" title="2. 安装box文件"></a>2. 安装box文件</h1><pre><code>根据需要下载centos或者ubuntu的vbox镜像，并添加到系统中，例如：vagrant box add alpha xxx.boxvagrant box add centos centos.boxvagrant box add xxx.box</code></pre><h1 id="3-创建目录并初始化vagrant"><a href="#3-创建目录并初始化vagrant" class="headerlink" title="3. 创建目录并初始化vagrant"></a>3. 创建目录并初始化vagrant</h1><pre><code>vagrant init</code></pre><a id="more"></a><h1 id="4-修改Vagrantfile"><a href="#4-修改Vagrantfile" class="headerlink" title="4. 修改Vagrantfile"></a>4. 修改Vagrantfile</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># -*- mode: ruby -*-</span><br><span class="line"># vi: set ft=ruby :</span><br><span class="line"></span><br><span class="line"># 1..3，根据需要修改</span><br><span class="line">Vagrant.configure(&quot;2&quot;) do |config|</span><br><span class="line">(1..3).each do |i|</span><br><span class="line">config.vm.define &quot;node#&#123;i&#125;&quot; do |node|</span><br><span class="line"># 设置虚拟机的Box，根据需要修改</span><br><span class="line">node.vm.box = &quot;base&quot;</span><br><span class="line"># 设置虚拟机的主机名</span><br><span class="line">node.vm.hostname=&quot;node#&#123;i&#125;&quot;</span><br><span class="line"># 设置虚拟机的IP</span><br><span class="line">node.vm.network &quot;private_network&quot;, ip: &quot;192.168.12.#&#123;i&#125;&quot;</span><br><span class="line"># 设置主机与虚拟机的共享目录，根据需要开启</span><br><span class="line"># config.vm.synced_folder &quot;C:\\ssd&quot;, &quot;/ssd&quot;</span><br><span class="line"># VirtaulBox相关配置</span><br><span class="line">node.vm.provider &quot;virtualbox&quot; do |v|</span><br><span class="line"># 设置虚拟机的名称</span><br><span class="line">v.name = &quot;node#&#123;i&#125;&quot;</span><br><span class="line"># 设置虚拟机的内存大小，根据需要修改</span><br><span class="line">v.memory = 768</span><br><span class="line"># 设置虚拟机的CPU个数</span><br><span class="line">v.cpus = 1</span><br><span class="line">end</span><br><span class="line">  </span><br><span class="line"># 使用shell脚本进行软件安装和配置</span><br><span class="line">node.vm.provision &quot;shell&quot;, inline: &lt;&lt;-SHELL</span><br><span class="line"># sudo apt-get update</span><br><span class="line">            echo &apos;do something&apos;</span><br><span class="line">SHELL</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h1 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant up</span><br></pre></td></tr></table></figure><h1 id="进入各虚拟机"><a href="#进入各虚拟机" class="headerlink" title="进入各虚拟机"></a>进入各虚拟机</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant ssh node1/node2/node3</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-安装vagrant和virtualbox&quot;&gt;&lt;a href=&quot;#1-安装vagrant和virtualbox&quot; class=&quot;headerlink&quot; title=&quot;1. 安装vagrant和virtualbox&quot;&gt;&lt;/a&gt;1. 安装vagrant和virtualbox&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;自行解决
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;2-安装box文件&quot;&gt;&lt;a href=&quot;#2-安装box文件&quot; class=&quot;headerlink&quot; title=&quot;2. 安装box文件&quot;&gt;&lt;/a&gt;2. 安装box文件&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;根据需要下载centos或者ubuntu的vbox镜像，并添加到系统中，例如：
vagrant box add alpha xxx.box
vagrant box add centos centos.box
vagrant box add xxx.box
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;3-创建目录并初始化vagrant&quot;&gt;&lt;a href=&quot;#3-创建目录并初始化vagrant&quot; class=&quot;headerlink&quot; title=&quot;3. 创建目录并初始化vagrant&quot;&gt;&lt;/a&gt;3. 创建目录并初始化vagrant&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;vagrant init
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="vagrant" scheme="http://bksaas.com/categories/vagrant/"/>
    
    
      <category term="vagrant" scheme="http://bksaas.com/tags/vagrant/"/>
    
  </entry>
  
</feed>
